from django.db import models

"""
An Object Relational Mapping is a layer of abstraction for data stored in a 
relational database. This abstraction lets us work with databases using a
familiar object-oriented metaphor that's well suited for code. Classes map to
database tables, attributes map to columns, and an individual instance of the
class represents a row within the database.
Witn an ORM, creating a record in a db is achieved by simply creating an object
and assigning some attributes, and calling .save(). Django gives an API to query
the db via a class attribute, .objects, and the simplest query, .all(), returns
all the records. The results are stored in a list-like QuerySet, from which we
can extract inividual records and/or call further functions, like .count().
"""

# All Django models must inherit from the Model class. Models map to tables in
# the database, and by default, they get an autogenerated id attribute, which acts
# as the primary key of the table. Once the model is created, we need to add it
# to the database; do this by running manage.py makemigrations


class List(models.Model):
        pass

class Item(models.Model):
    # add a text and list column, with a default value
    text = models.TextField(default='')
    list = models.ForeignKey(List, default=None)

